<!--
 *  _________          _     ____          _           __        __    _ _      _   _   _ ___ 
 * |__  / ___|__ _ ___| |__ / ___|_      _(_)_ __   __ \ \      / /_ _| | | ___| |_| | | |_ _|
 *   / / |   / _` / __| '_ \\___ \ \ /\ / / | '_ \ / _` \ \ /\ / / _` | | |/ _ \ __| | | || | 
 *  / /| |__| (_| \__ \ | | |___) \ V  V /| | | | | (_| |\ V  V / (_| | | |  __/ |_| |_| || | 
 * /____\____\__,_|___/_| |_|____/ \_/\_/ |_|_| |_|\__, | \_/\_/ \__,_|_|_|\___|\__|\___/|___|
 *                                                 |___/                                      
 *                                       
 * Copyright (c) 2016-2017 Ivan Vaklinov <ivan@vaklinov.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.                                    
 *
-->
<project name="ZclassicSwingWalletUI" basedir="../.." default="buildit">
	
    <property name="src.dir"     value="src"/>
	<property name="lib.dir"     value="lib"/>
    <property name="build.dir"   value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
	<property name="temp.dir"    value="${build.dir}/temp"/>
    <property name="jar.dir"     value="${build.dir}/jars"/>
	<property name="ubuntu.package.dir" value="${build.dir}/ubuntu-package"/>

    <property name="main-class"  value="com.vaklinov.zcashui.ZCashUI"/>

	<path id="main-classpath">
		<pathelement path="${basedir}/lib/bitcoinj-core-0.14.5.jar" />
	</path>
	
	<path id="jdeb.jar">
	    <pathelement path="${basedir}/lib/jdeb-1.5.jar" />
	</path>
	<taskdef name="deb" classpathref="jdeb.jar" classname="org.vafer.jdeb.ant.DebAntTask"/>
	
	<condition property="isMacOS">
	    <os family="mac" />
	</condition>

	<condition property="isWindows">
	    <os family="windows" />
	</condition>

	<condition property="isUnix">
	    <os family="unix" />
	</condition>
	
	<!-- TARGETS -->
	
    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>
	
    <target name="copyResources" depends="clean">
    	<copy todir="${classes.dir}" >  
    	    <fileset dir="${src.dir}/resources">  
    	        <include name="images/**"/>
    	        <include name="keys/**"/>
    	    </fileset>
    	</copy>
    </target>

    <target name="compile" depends="clean">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="on">
        	<classpath refid="main-classpath"/>
        </javac>
    </target>

    <target name="jar" depends="compile,copyResources">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" 
        	 basedir="${classes.dir}"
        	 excludes="**/tradetest/*.class">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
                <attribute name="Class-Path" value="bitcoinj-core-0.14.5.jar sqlite-jdbc-3.21.0.jar"/>
            </manifest>
        </jar>
        <jar destfile="${jar.dir}/${ant.project.name}-src.jar" 
        	 basedir="${src.dir}">
        </jar>
    </target>
	
    <target name="ubuntuPackage" depends="jar,copyothers">	
    	<mkdir dir="${ubuntu.package.dir}"/>
	    <deb destfile="${ubuntu.package.dir}/zencash-desktop-gui-wallet_0.75.9_all.deb" 
	    	 control="${src.dir}/resources/ubuntu-package" 
	    	 verbose="true">
	    	
	      <data src="${jar.dir}/${ant.project.name}.jar" type="file">
	        <mapper type="perm" filemode="755" prefix="/usr/lib/zencash-gui-wallet"/>
	      </data>
	      <data src="${jar.dir}/bitcoinj-core-0.14.5.jar" type="file">
	        <mapper type="perm" filemode="755" prefix="/usr/lib/zencash-gui-wallet"/>
	      </data>
	      <data src="${jar.dir}/bitcoinj-core-0.14.5_LICENSE.txt" type="file">
	        <mapper type="perm" filemode="755" prefix="/usr/lib/zencash-gui-wallet"/>
	      </data>
		  <data src="${jar.dir}/sqlite-jdbc-3.21.0.jar" type="file">
			 <mapper type="perm" filemode="755" prefix="/usr/lib/zencash-gui-wallet"/>
		  </data>
		  <data src="${jar.dir}/sqlite-jdbc-3.21.0_LICENSE.txt" type="file">
			 <mapper type="perm" filemode="755" prefix="/usr/lib/zencash-gui-wallet"/>
		  </data>

			<!-- TODO: As of Nov 2017 the IPFS wallet integration is suspended.
            <data src="${jar.dir}/go-ipfs/ipfs" type="file">
              <mapper type="perm" filemode="755" prefix="/usr/lib/zencash-gui-wallet/go-ipfs"/>
            </data>
            <data src="${jar.dir}/go-ipfs/LICENSE" type="file">
              <mapper type="perm" filemode="755" prefix="/usr/lib/zencash-gui-wallet/go-ipfs"/>
            </data>
            <data src="${jar.dir}/go-ipfs/README.md" type="file">
              <mapper type="perm" filemode="755" prefix="/usr/lib/zencash-gui-wallet/go-ipfs"/>
            </data>
            -->
	      <data src="${src.dir}/resources/ubuntu-package/zencash-desktop-gui-wallet" type="file">
	        <mapper type="perm" filemode="755" prefix="/usr/bin"/>
	      </data>
	      <data src="${src.dir}/resources/ubuntu-package/ZENCashWallet.desktop" type="file">
	        <mapper type="perm" filemode="755" prefix="/usr/share/applications"/>
	      </data>
	      <data src="${src.dir}/resources/ubuntu-package/ZEN-icon.png" type="file">
	        <mapper type="perm" filemode="755" prefix="/usr/lib/zencash-gui-wallet"/>
	      </data>	    	
	    </deb>
	</target>
	
	<!-- TODO: As of Nov 2017 the IPFS wallet integration is suspended. 
	<target name="unpackIPFSForMacOS" if="isMacOS">
	    <echo message="Using the IPFS packaged executable on Mac OS..." />
		<mkdir dir="${temp.dir}"/>
		<gunzip src="${basedir}/lib/go-ipfs_v0.4.11_darwin-amd64.tar.gz" dest="${temp.dir}/ipfs.tar"/>
	</target>

	<target name="unpackIPFSForWindows" if="isWindows">
	    <echo message="Using the IPFS packaged executable on Windows..." />
		<mkdir dir="${temp.dir}"/>
		<gunzip src="${basedir}/lib/go-ipfs_v0.4.11_windows-amd64.tar.gz" dest="${temp.dir}/ipfs.tar"/>
	</target>

	<target name="unpackIPFSForLinux" if="isUnix">
	    <echo message="Using the IPFS packaged executable on Linux..." />
		<mkdir dir="${temp.dir}"/>
		<gunzip src="${basedir}/lib/go-ipfs_v0.4.11_linux-amd64.tar.gz" dest="${temp.dir}/ipfs.tar"/>
	</target>
	-->
	
	<target name="copyothers">
    	<copy todir="${jar.dir}" >  
    	    <fileset dir="${lib.dir}">  
    	        <include name="bitcoinj-core-0.14.5*"/>
				<include name="sqlite-jdbc-3.21.0*"/>
    	    </fileset>
    	</copy>
		<!-- As of Nov 2017 the IPFS wallet integration is suspended.
		<untar src="${temp.dir}/ipfs.tar" dest="${jar.dir}"/>
		-->
	</target>
	
    <target name="buildit" depends="clean,jar,copyothers,ubuntuPackage">
    	<!-- Final cleanup -->
    	<delete dir="${classes.dir}"/>
    	<delete dir="${temp.dir}"/>
	</target>

</project>

